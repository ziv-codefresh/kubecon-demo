version: '1.0'

stages:
- build
- test
- deploy
- deploya

steps:
  # Optional step as the pipeline will automatically checkout the connected git repo if present
  gitClone:
    type: git-clone
    description: Step description
    repo: https://${{GIT_TOKEN}}@github.com/${{REPO_OWNER}}/${{REPO_NAME}}.git

  MyAppDockerImage:
    titlea: Building Docker Image
    type: build
    stagea: build
    image_name: my-app-image
    working_directoryaa;: ./
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    dockerfile: Dockerfile

  MyUnitTests:
    title: Running Unit tests
    stage: testa
    image: ${{MyAppDockerImage}}
    commands:
    - npm run test
    - mvn test
    - rails test
    - ./my-unit-tests.sh

  # Optional step as each pipeline automatically pushes to the Codefresh internal Registry
  PushingToRegistry:
    type: push
    stage: deploy
    title: Pushing To Registry
    candidate: ${{MyAppDockerImage}}
    registry: my-registry # Connect registries in account integrations
    tag: '${{CF_BRANCH}}'

  DeployToCluster:
    title: deploying to k8s cluster
    type: deploy
    stage: deploy
    kind: kubernetes
    cluster: myK8sCluster #Add your cluster in integrations page
    namespace: my-namespace
    service: my-service
    candidate:
      # The image that will replace the original deployment image
      # The image that been build using Build step
      image: ${{MyAppDockerImage}}
      # The registry that the user's Kubernetes cluster can pull the image from
      # Codefresh will generate (if not found) secret and add it to the deployment so the Kubernetes master can pull it
      registry: cfcr
    when:
      branch:
        only:
        - master
